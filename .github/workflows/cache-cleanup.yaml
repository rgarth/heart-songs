name: YouTube Cache Cleanup

on:
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      cleanup_type:
        description: 'Type of cleanup (standard, aggressive, light)'
        required: false
        default: 'standard'
        type: choice
        options:
          - standard
          - aggressive
          - light

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: |
          cd server
          npm install
      
      - name: Create .env file
        run: |
          cd server
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > .env
          echo "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}" >> .env
          echo "LASTFM_API_KEY=${{ secrets.LASTFM_API_KEY }}" >> .env
      
      - name: Run cache cleanup
        run: |
          cd server
          if [ "${{ github.event.inputs.cleanup_type }}" = "aggressive" ]; then
            npm run cache:cleanup:aggressive
          elif [ "${{ github.event.inputs.cleanup_type }}" = "light" ]; then
            npm run cache:cleanup:light
          else
            npm run cache:cleanup
          fi
      
      - name: Monitor cache status
        run: |
          cd server
          node scripts/monitorCache.js

      # Optional: Send notifications or create issues if cache is too large
      - name: Check cache size
        run: |
          cd server
          # This could be expanded to check cache size and create GitHub issues
          # if the cache grows too large or other thresholds are met
          echo "Cache cleanup completed"